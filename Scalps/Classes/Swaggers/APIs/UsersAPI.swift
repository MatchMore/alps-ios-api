//
// UsersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class UsersAPI: APIBase {
    /**
     Create a user
     
     - parameter user: (body) The skeleton object of the user to be created 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createUser(user: User, completion: @escaping ((_ data: User?,_ error: Error?) -> Void)) {
        createUserWithRequestBuilder(user: user).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create a user
     - POST /users
     - API Key:
       - type: apiKey dev-key 
       - name: dev-key
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "userId" : "aeiou"
}}]
     
     - parameter user: (body) The skeleton object of the user to be created 

     - returns: RequestBuilder<User> 
     */
    open class func createUserWithRequestBuilder(user: User) -> RequestBuilder<User> {
        let path = "/users"
        let URLString = ScalpsAPI.basePath + path
        let parameters = user.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<User>.Type = ScalpsAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List all users
     
     - parameter limit: (query) How many items to return at one time (1-100, default 100) (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listUsers(limit: Int32? = nil, completion: @escaping ((_ data: Users?,_ error: Error?) -> Void)) {
        listUsersWithRequestBuilder(limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     List all users
     - GET /users
     - API Key:
       - type: apiKey dev-key 
       - name: dev-key
     - examples: [{contentType=application/json, example=""}]
     
     - parameter limit: (query) How many items to return at one time (1-100, default 100) (optional)

     - returns: RequestBuilder<Users> 
     */
    open class func listUsersWithRequestBuilder(limit: Int32? = nil) -> RequestBuilder<Users> {
        let path = "/users"
        let URLString = ScalpsAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "limit": limit?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Users>.Type = ScalpsAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
